name: CI/CD Pipeline
on:
  # Trigger the workflow only manually
  workflow_dispatch:

jobs:
    build:
        strategy:
            matrix:
                os: [ubuntu-latest]
                node-version: [18.x]
        runs-on: ${{ matrix.os }}
        timeout-minutes: 15
        steps:
            - name: Checkout code repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - name: Setup pnpm
              uses: pnpm/action-setup@v2.4.0
              with:
                  run_install: true
            - name: Cache pnpm modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-pnpm-modules
              with:
                  path: ~/.pnpm-store
                  key: ${{ matrix.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ matrix.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - name: Install pnpm modules
              run: pnpm install
            - name: Run build
              run: pnpm run build
            - name: Install playwright browsers
              run: npx playwright install --with-deps
            - name: Run preview integration tests
              run: pnpm run test:integration
            - name: Find Playwright Reports
              if: always()
              id: find_reports
              run: |
                # Get a list of directories containing the "playwright-report" folder
                directories=$(find . -type d -name "playwright-report" -printf '%h\n')
                # Loop through each directory
                for dir in $directories; do
                  # Extract the package name from the directory path
                  package_name=$(basename "$dir")

                  # Upload the "playwright-report" directory as an artifact with the package name
                  echo "Uploading $dir as an artifact with package name $package_name"
                  echo "::set-env name=PACKAGE_NAME::$package_name"
                  echo "::set-env name=PLAYWRIGHT_REPORTS_PATH::$dir"
                  echo "::set-output name=package_name::$package_name"
                  echo "::set-output name=playwright_reports_path::$dir"
                done
            - name: Upload playwright report
              uses: actions/upload-artifact@v3
              if: always()
              with:
                name: ${{ steps.find_reports.outputs.package_name }}-os--${{ matrix.os }}-node-version--${{ matrix.node-version }}-report
                path: ${{ steps.find_reports.outputs.playwright_reports_path }}
                retention-days: 15